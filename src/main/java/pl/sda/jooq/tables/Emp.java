/*
 * This file is generated by jOOQ.
*/
package pl.sda.jooq.tables;


import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.sda.jooq.Keys;
import pl.sda.jooq.Sda;
import pl.sda.jooq.tables.records.EmpRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Emp extends TableImpl<EmpRecord> {

    private static final long serialVersionUID = -407946778;

    /**
     * The reference instance of <code>sda.emp</code>
     */
    public static final Emp EMP = new Emp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmpRecord> getRecordType() {
        return EmpRecord.class;
    }

    /**
     * The column <code>sda.emp.empno</code>.
     */
    public final TableField<EmpRecord, Integer> EMPNO = createField("empno", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sda.emp.ename</code>.
     */
    public final TableField<EmpRecord, String> ENAME = createField("ename", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>sda.emp.job</code>.
     */
    public final TableField<EmpRecord, String> JOB = createField("job", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>sda.emp.manager</code>.
     */
    public final TableField<EmpRecord, Integer> MANAGER = createField("manager", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sda.emp.hiredate</code>.
     */
    public final TableField<EmpRecord, Date> HIREDATE = createField("hiredate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>sda.emp.salary</code>.
     */
    public final TableField<EmpRecord, BigDecimal> SALARY = createField("salary", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>sda.emp.commision</code>.
     */
    public final TableField<EmpRecord, BigDecimal> COMMISION = createField("commision", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>sda.emp.deptno</code>.
     */
    public final TableField<EmpRecord, Integer> DEPTNO = createField("deptno", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>sda.emp</code> table reference
     */
    public Emp() {
        this("emp", null);
    }

    /**
     * Create an aliased <code>sda.emp</code> table reference
     */
    public Emp(String alias) {
        this(alias, EMP);
    }

    private Emp(String alias, Table<EmpRecord> aliased) {
        this(alias, aliased, null);
    }

    private Emp(String alias, Table<EmpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sda.SDA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmpRecord> getPrimaryKey() {
        return Keys.EMP_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmpRecord>> getKeys() {
        return Arrays.<UniqueKey<EmpRecord>>asList(Keys.EMP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmpRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmpRecord, ?>>asList(Keys.EMP__EMP_DEPT_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Emp as(String alias) {
        return new Emp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Emp rename(String name) {
        return new Emp(name, null);
    }
}
