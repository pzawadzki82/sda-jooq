/*
 * This file is generated by jOOQ.
*/
package pl.sda.jooq.tables.records;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import pl.sda.jooq.tables.Emp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmpRecord extends UpdatableRecordImpl<EmpRecord> implements Record8<Integer, String, String, Integer, Date, BigDecimal, BigDecimal, Integer> {

    private static final long serialVersionUID = -2020744791;

    /**
     * Setter for <code>sda.emp.empno</code>.
     */
    public void setEmpno(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sda.emp.empno</code>.
     */
    public Integer getEmpno() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sda.emp.ename</code>.
     */
    public void setEname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sda.emp.ename</code>.
     */
    public String getEname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sda.emp.job</code>.
     */
    public void setJob(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sda.emp.job</code>.
     */
    public String getJob() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sda.emp.manager</code>.
     */
    public void setManager(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sda.emp.manager</code>.
     */
    public Integer getManager() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sda.emp.hiredate</code>.
     */
    public void setHiredate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>sda.emp.hiredate</code>.
     */
    public Date getHiredate() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>sda.emp.salary</code>.
     */
    public void setSalary(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>sda.emp.salary</code>.
     */
    public BigDecimal getSalary() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>sda.emp.commision</code>.
     */
    public void setCommision(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>sda.emp.commision</code>.
     */
    public BigDecimal getCommision() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>sda.emp.deptno</code>.
     */
    public void setDeptno(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>sda.emp.deptno</code>.
     */
    public Integer getDeptno() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Integer, Date, BigDecimal, BigDecimal, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Integer, Date, BigDecimal, BigDecimal, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Emp.EMP.EMPNO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Emp.EMP.ENAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Emp.EMP.JOB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Emp.EMP.MANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Emp.EMP.HIREDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return Emp.EMP.SALARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return Emp.EMP.COMMISION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Emp.EMP.DEPTNO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEmpno();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getJob();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getManager();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getHiredate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getSalary();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getCommision();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getDeptno();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value1(Integer value) {
        setEmpno(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value2(String value) {
        setEname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value3(String value) {
        setJob(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value4(Integer value) {
        setManager(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value5(Date value) {
        setHiredate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value6(BigDecimal value) {
        setSalary(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value7(BigDecimal value) {
        setCommision(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord value8(Integer value) {
        setDeptno(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmpRecord values(Integer value1, String value2, String value3, Integer value4, Date value5, BigDecimal value6, BigDecimal value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmpRecord
     */
    public EmpRecord() {
        super(Emp.EMP);
    }

    /**
     * Create a detached, initialised EmpRecord
     */
    public EmpRecord(Integer empno, String ename, String job, Integer manager, Date hiredate, BigDecimal salary, BigDecimal commision, Integer deptno) {
        super(Emp.EMP);

        set(0, empno);
        set(1, ename);
        set(2, job);
        set(3, manager);
        set(4, hiredate);
        set(5, salary);
        set(6, commision);
        set(7, deptno);
    }
}
